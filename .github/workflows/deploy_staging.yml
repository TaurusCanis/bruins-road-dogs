# This workflow will install Python dependencies, run tests, and deploy your Flask app to your staging server
name: Deploy to Staging

on:
  push:
    branches: [ "staging" ]

jobs:
  build_and_deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python 3.11.4
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.4"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
   
    - name: Create instance directory
      run: mkdir -p instance   
    # Run migrations
    - name: Run database migrations
      run: python ./migrate.py up

    # Seed the database
    - name: Seed game and team data
      run: python ./scripts/seed_game_and_team_data.py
        
    - name: Run tests with pytest
      run: pytest

    # - name: Setup SSH
    #   run: |
    #     mkdir -p ~/.ssh/ && touch ~/.ssh/known_hosts
    #     ssh-keyscan "${{ secrets.SERVER_HOSTNAME }}" >> ~/.ssh/known_hosts
    #     eval $(ssh-agent)
    #     ssh-add - <<< "${{ secrets.STAGING_SSH_PRIVATE_KEY }}"

    - name: Create SSH key
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.STAGING_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

    - name: Deploy to Staging Server
      if: success()
      run: |
        rsync -avz --exclude '__pycache__' --exclude 'venv' --exclude 'app.log' ./ ${{ secrets.RSYNC_DEST }}
      env:
        DEPLOY_KEY: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}

